# TODO: consider running unifi natively on the host
# # https://community.ui.com/questions/UniFi-Installation-Scripts-or-UniFi-Easy-Update-Script-or-UniFi-Lets-Encrypt-or-UniFi-Easy-Encrypt-/ccbc7530-dd61-40a7-82ec-22b17f027776
# - tempfile:
#     state: directory
#   register: temp_dir

# - name: Download installer
#   get_url:
#     url: https://dl.ui.com/unifi/7.3.76/unifi_sysvinit_all.deb
#     dest: "{{temp_dir.path}}"
#   register: installer

- name: Create unifi data folder
  file:
    path: /etc/unifi/data
    state: directory

- name: Create unifi log folder
  file:
    path: /etc/unifi/log
    state: directory

- name: Launch Unifi Controller
  docker_container:
    name: unifi
    network_mode: host
    volumes:
      - /etc/unifi:/unifi
    restart_policy: unless-stopped
    exposed_ports:
      - 8080:8080
      - 8443:8443
      - 3478:3478/udp
    init: yes
    env:
      TZ: "America/Moncton"
    state: started
    user: unifi
    image: jacobalberty/unifi:latest
    healthcheck:
      test: ["NONE"]
    pull: yes

# NOTE: post install I had to create custom local admin for homeassistant
#       to create a local admin you need to set the web UI to legacy mode
#       by going to settings -> System -> Advanced. Then when you add a new
#       limited admin user without an email, and then you can restore the
#       modern UI
# TODO: see if there is some way to do this via Ansible and APIs

# NOTE: I had to hook up the integration between homeassistant and unifi
#       and I had to use either the IP address of the host or "localhost",
#       using the host name didn't work
# TODO: see if I can set up this integration automatically with Ansible

# TODO: add code for setting up backups (maybe use tarball of config folder and upload to onedrive)
# TODO: review ubiquiti automatic backups to see if that is a better option